export declare const SEED_DATA: ({
    name: string;
    tag: string;
    description: string;
    packageName: string;
    category: string;
    stylesPanelSections: string[];
    layout: {
        flex: number;
    };
    triggers: string[];
    props: {
        onRefresh: {
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            formType: string;
            propType: string;
            defaultValue: null;
            group: string;
        };
        onEndReached: {
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            formType: string;
            propType: string;
            defaultValue: null;
            group: string;
        };
        numColumns: {
            label: string;
            description: string;
            group: string;
            formType: string;
            propType: string;
            defaultValue: number;
            editable: boolean;
            required: boolean;
        };
        estimatedItemSize: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            group: string;
            defaultValue: null;
            editable: boolean;
            required: boolean;
            step: number;
        };
        initialNumToRender: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            group: string;
            defaultValue: null;
            editable: boolean;
            required: boolean;
            step: number;
        };
        onEndReachedThreshold: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            group: string;
            defaultValue: null;
            editable: boolean;
            required: boolean;
            step: number;
        };
        refreshColor: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            defaultValue: null;
            formType: string;
            propType: string;
        };
        showsHorizontalScrollIndicator: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: boolean;
            editable: boolean;
            required: boolean;
            group: string;
        };
        showsVerticalScrollIndicator: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: boolean;
            editable: boolean;
            required: boolean;
            group: string;
        };
        horizontal?: undefined;
        inverted?: undefined;
    };
} | {
    name: string;
    tag: string;
    description: string;
    packageName: string;
    category: string;
    stylesPanelSections: string[];
    layout: {
        flex: number;
    };
    triggers: string[];
    props: {
        onRefresh: {
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            formType: string;
            propType: string;
            defaultValue: null;
            group: string;
        };
        onEndReached: {
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            formType: string;
            propType: string;
            defaultValue: null;
            group: string;
        };
        estimatedItemSize: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            group: string;
            defaultValue: null;
            editable: boolean;
            required: boolean;
            step: number;
        };
        horizontal: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: boolean;
            editable: boolean;
            required: boolean;
            group: string;
        };
        inverted: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: boolean;
            editable: boolean;
            required: boolean;
            group: string;
        };
        numColumns: {
            label: string;
            description: string;
            group: string;
            formType: string;
            propType: string;
            defaultValue: number;
            editable: boolean;
            required: boolean;
        };
        initialNumToRender: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            group: string;
            defaultValue: null;
            editable: boolean;
            required: boolean;
            step: number;
        };
        onEndReachedThreshold: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            group: string;
            defaultValue: null;
            editable: boolean;
            required: boolean;
            step: number;
        };
        refreshColor: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            defaultValue: null;
            formType: string;
            propType: string;
        };
        showsHorizontalScrollIndicator: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: boolean;
            editable: boolean;
            required: boolean;
            group: string;
        };
        showsVerticalScrollIndicator: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: boolean;
            editable: boolean;
            required: boolean;
            group: string;
        };
    };
})[];
//# sourceMappingURL=FlashList.d.ts.map